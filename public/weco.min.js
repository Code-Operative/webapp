"use strict";var app=angular.module("wecoApp",["config","ui.router","ngAnimate","ngFileUpload","api"]);app.config(function($stateProvider,$urlRouterProvider,$locationProvider){$locationProvider.html5Mode(!0),$urlRouterProvider.otherwise("/"),$urlRouterProvider.rule(function($injector,$location){var a=$location.path(),b="/"===a[a.length-1];if(b){var c=a.substr(0,a.length-1);return c}}),$stateProvider.state("auth",{"abstract":!0,templateUrl:"/app/pages/auth/auth.view.html",controller:"authController"}).state("auth.login",{url:"/login"}).state("auth.signup",{url:"/signup"}).state("weco",{"abstract":!0,resolve:{authenticate:function(){console.log("This code is ran before any state is reached...")}},template:'<nav-bar></nav-bar><div class="full-page-nav" ui-view></div>'}).state("weco.notfound",{templateUrl:"/app/pages/notfound/notfound.view.html"}).state("weco.home",{url:"/",templateUrl:"/app/pages/home/home.view.html"}).state("weco.profile",{url:"/u/:username","abstract":!0,templateUrl:"/app/pages/profile/profile.view.html",controller:"profileController"}).state("weco.profile.about",{url:"",templateUrl:"/app/pages/profile/about/about.view.html"}).state("weco.profile.timeline",{templateUrl:"/app/pages/profile/timeline/timeline.view.html"}).state("weco.profile.settings",{templateUrl:"/app/pages/profile/settings/settings.view.html"}).state("weco.branch",{url:"/b/:branchid","abstract":!0,templateUrl:"/app/pages/branch/branch.view.html",controller:"branchController"}).state("weco.branch.nucleus",{url:"/nucleus","abstract":!0,templateUrl:"/app/pages/branch/nucleus/nucleus.view.html",controller:"nucleusController"}).state("weco.branch.nucleus.about",{url:"",templateUrl:"/app/pages/branch/nucleus/about/about.view.html"}).state("weco.branch.nucleus.settings",{templateUrl:"/app/pages/branch/nucleus/settings/settings.view.html"}).state("weco.branch.nucleus.moderators",{templateUrl:"/app/pages/branch/nucleus/moderators/moderators.view.html",controller:"nucleusModeratorsController"}).state("weco.branch.subbranches",{url:"/subbranches?filter",params:{filter:"alltime"},resolve:{filterBranches:function(){}},templateUrl:"/app/pages/branch/subbranches/subbranches.view.html",controller:"subbranchesController"}).state("weco.branch.wall",{url:"/wall",templateUrl:"/app/pages/branch/wall/wall.view.html"}),$urlRouterProvider.otherwise(function($injector,$location){var a=$injector.get("$state");return a.go("weco.notfound"),$location.path()})});var app=angular.module("wecoApp");app.directive("loading",function(){return{restrict:"A",templateUrl:"/app/components/loading/loading.view.html",scope:{when:"&"},replace:!1,transclude:!0}});var app=angular.module("wecoApp");app.controller("modalNucleusSettingsController",["$scope","$timeout","Modal","Branch",function(a,b,c,d){a.Modal=c,a.values=[],a.errorMessage="",a.isLoading=!1,a.$on("OK",function(){if(a.values.length<c.getInputArgs().inputs.length||a.values.indexOf("")>-1)return void b(function(){a.errorMessage="Please fill in all fields"});for(var e={},f=0;f<c.getInputArgs().inputs.length;f++)e[c.getInputArgs().inputs[f].fieldname]=a.values[f],"date"==c.getInputArgs().inputs[f].type&&(e[c.getInputArgs().inputs[f].fieldname]=new Date(a.values[f]).getTime());a.isLoading=!0,d.update(e).then(function(){b(function(){a.values=[],a.errorMessage="",a.isLoading=!1,c.OK()})},function(c){b(function(){a.errorMessage=c.message,a.isLoading=!1})})}),a.$on("Cancel",function(){b(function(){a.values=[],a.errorMessage="",a.isLoading=!1,c.Cancel()})})}]);var app=angular.module("wecoApp");app.directive("modal",["Modal",function(a){return{restrict:"A",replace:!1,scope:{},templateUrl:"/app/components/modals/modal.view.html",link:function(b,c,d){b.getTemplateUrl=a.templateUrl,b.isOpen=a.isOpen,b.OK=function(){b.$broadcast("OK")},b.Cancel=function(){b.$broadcast("Cancel")}}}}]);var app=angular.module("wecoApp");app.factory("Modal",["$timeout",function(a){var b={},c="";b.templateUrl=function(){return c};var d=!1;b.isOpen=function(){return d};var e={};b.getInputArgs=function(){return e};var f,g;return b.open=function(a,b){return c=a,d=!0,e=b,new Promise(function(a,b){f=a,g=b})},b.OK=function(){a(function(){d=!1}),f(!0)},b.Cancel=function(){a(function(){d=!1}),f(!1)},b.Error=function(){g()},b}]);var app=angular.module("wecoApp");app.controller("modalProfileSettingsController",["$scope","$timeout","Modal","User",function(a,b,c,d){a.Modal=c,a.values=[],a.errorMessage="",a.isLoading=!1,a.$on("OK",function(){if(a.values.length<c.getInputArgs().inputs.length||a.values.indexOf("")>-1)return void b(function(){a.errorMessage="Please fill in all fields"});for(var e={},f=0;f<c.getInputArgs().inputs.length;f++)e[c.getInputArgs().inputs[f].fieldname]=a.values[f],"date"==c.getInputArgs().inputs[f].type&&(e[c.getInputArgs().inputs[f].fieldname]=new Date(a.values[f]).getTime());a.isLoading=!0,d.update(e).then(function(){b(function(){a.values=[],a.errorMessage="",a.isLoading=!1,c.OK()})},function(c){b(function(){a.errorMessage=c.message,a.isLoading=!1})})}),a.$on("Cancel",function(){b(function(){a.values=[],a.errorMessage="",a.isLoading=!1,c.Cancel()})})}]);var app=angular.module("wecoApp");app.controller("modalUploadImageController",["$scope","$timeout","Modal","$http","ENV","Upload",function(a,b,c,d,e,f){a.Modal=c,a.errorMessage="",a.uploadUrl="",a.file=null,a.isUploading=!1,a.progress=0,a.$watch(function(){return c.isOpen()},function(b){b&&d({method:"GET",url:e.apiEndpoint+c.getInputArgs().route+c.getInputArgs().type+"-upload-url"}).then(function(b){b&&b.data&&b.data.data?a.uploadUrl=b.data.data:console.log("error")},function(){console.log("error")})}),a.setFile=function(b){a.file=b},a.upload=function(){return a.file?void f.http({url:a.uploadUrl,method:"PUT",headers:{"Content-Type":"image/*"},data:a.file}).then(function(b){a.file=null,a.isUploading=!1,a.progress=0,c.OK()},function(b){a.file=null,a.isUploading=!1,a.progress=0,console.error("Unable to upload photo!")},function(b){a.progress=Math.min(100,parseInt(100*b.loaded/b.total))}):void console.error("No file selected")},a.$on("Cancel",function(){b(function(){a.file=null,a.errorMessage="",c.Cancel()})}),a.$on("OK",function(){return a.file?void b(function(){a.errorMessage="",a.isUploading=!0,a.progress=0,a.upload()}):void console.error("No file selected")})}]);var app=angular.module("wecoApp");app.directive("navBar",["User","$state",function(a,b){return{restrict:"E",replace:"true",templateUrl:"/app/components/nav/nav.view.html",link:function(c,d,e){c.user=a.me,c.isLoggedIn=a.isLoggedIn,c.logout=function(){a.logout().then(function(){b.go("auth.login")},function(){alert("Unable to log out!")})}}}}]);var app=angular.module("wecoApp");app.directive("tabs",["$state",function(a){return{restrict:"E",replace:"true",scope:{items:"&",states:"&",callbacks:"="},templateUrl:"/app/components/tabs/tabs.view.html",link:function(b,c,d){b.isSelected=function(c){var d,e,f=b.states()[c].indexOf("("),g=b.states()[c].indexOf(")");if(f>-1&&g>-1)try{d=JSON.parse(b.states()[c].substr(f+1,b.states()[c].length-f-2)),e=b.states()[c].substr(0,f)}catch(h){console.error("Unable to parse JSON!")}return d&&e?a.current.name==e&&JSON.stringify(d)==JSON.stringify(a.params):a.current.name==b.states()[c]}}}}]),angular.module("config",[]).constant("ENV",{name:"local",apiEndpoint:"http://localhost:8080/"});var api=angular.module("api",["ngResource"]);api.config(["$httpProvider",function(a){a.defaults.withCredentials=!0}]);var api=angular.module("api");api.factory("BranchAPI",["$resource","ENV",function(a,b){function c(a,b){var c=[];for(var d in a)c.push(encodeURIComponent(d)+"="+encodeURIComponent(a[d]));return c.join("&")}var d=a(b.apiEndpoint+"branch/:branchid",{},{update:{method:"PUT",headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:c}});return d}]);var api=angular.module("api");api.factory("SubbranchesAPI",["$resource","ENV",function(a,b){var c=a(b.apiEndpoint+"subbranches/:parentid",{},{});return c}]);var api=angular.module("api");api.factory("UserAPI",["$resource","ENV",function(a,b){function c(a,b){var c=[];for(var d in a)c.push(encodeURIComponent(d)+"="+encodeURIComponent(a[d]));return c.join("&")}var d=a(b.apiEndpoint+"user/:param",{param:"me"},{login:{method:"POST",params:{param:"login"},headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:c},logout:{method:"GET",params:{param:"logout"}},signup:{method:"POST",params:{param:""}},update:{method:"PUT",headers:{"Content-Type":"application/x-www-form-urlencoded"},transformRequest:c}});return d}]);var app=angular.module("wecoApp");app.factory("Branch",["BranchAPI","SubbranchesAPI","$http","$state","ENV",function(a,b,c,d,e){var f={};return f.getPictureUrl=function(a,b){return"picture"!=b&&"cover"!=b&&(b="picture"),c.get(e.apiEndpoint+"branch/"+a+"/"+b)},f.getSubbranches=function(a){return new Promise(function(c,d){b.get({parentid:a}).$promise["catch"](function(a){d({status:a.status,message:a.data.message})}).then(function(a){a&&a.data?c(a.data):d({status:500,message:"Something went wrong"})})})},f.get=function(b){return new Promise(function(c,d){a.get({branchid:b}).$promise["catch"](function(a){d({status:a.status,message:a.data.message})}).then(function(a){return a&&a.data?void f.getPictureUrl(b,"picture").then(function(d){d&&d.data&&d.data.data&&(a.data.profileUrl=d.data.data),f.getPictureUrl(b,"cover").then(function(b){b&&b.data&&b.data.data&&(a.data.coverUrl=b.data.data),c(a.data)},function(){c(a.data)})},function(){c(a.data)}):d()})})},f.update=function(b){return new Promise(function(c,e){a.update({branchid:d.params.branchid},b).$promise["catch"](function(a){e({status:a.status,message:a.data.message})}).then(function(){c()})})},f}]);var app=angular.module("wecoApp");app.factory("User",["UserAPI","$http","ENV",function(a,b,c){function d(a,d){return a||(a="me"),"picture"!=d&&"cover"!=d&&(d="picture"),b.get(c.apiEndpoint+"user/"+a+"/"+d)}function e(){return new Promise(function(b,c){a.get().$promise["catch"](function(){return console.error("Unable to fetch user!"),c()}).then(function(a){return a&&a.data?void d("me","picture").then(function(c){c&&c.data&&c.data.data&&(a.data.profileUrl=c.data.data),d("me","cover").then(function(c){c&&c.data&&c.data.data&&(a.data.coverUrl=c.data.data),g.data=a.data,b()},function(){g.data=a.data,b()})},function(){g.data=a.data,b()}):c()})})}var f={},g={};return e().then(function(){},function(){console.error("Unable to get user!")}),f.me=function(){return g.data||{}},f.get=function(b){return new Promise(function(c,e){a.get({param:b}).$promise["catch"](function(a){e({status:a.status,message:a.data.message})}).then(function(a){a&&a.data?d(b,"picture").then(function(e){e&&e.data&&e.data.data&&(a.data.profileUrl=e.data.data),d(b,"cover").then(function(b){b&&b.data&&b.data.data&&(a.data.coverUrl=b.data.data),c(a.data)},function(){c(a.data)})},function(b){c(a.data)}):e({status:500,message:"Something went wrong"})})})},f.update=function(b){return new Promise(function(c,d){a.update(b).$promise["catch"](function(a){d({status:a.status,message:a.data.message})}).then(function(){c()})})},f.isLoggedIn=function(){return f.me().username||!1},f.login=function(b){return new Promise(function(c,d){a.login(b).$promise["catch"](function(a){d({status:a.status,message:a.data.message})}).then(function(){e().then(c,d)})})},f.logout=function(){return new Promise(function(b,c){a.logout().$promise["catch"](function(a){c({status:a.status,message:a.data.message})}).then(function(){g=a.get(),b()})})},f.signup=function(b){return new Promise(function(c,d){a.signup(b).$promise["catch"](function(a){d({status:a.status,message:a.data.message})}).then(function(){e().then(c,d)})})},f}]);var app=angular.module("wecoApp");app.controller("authController",["$scope","$state","User",function(a,b,c){function d(){c.login(a.credentials).then(function(){a.isLoading=!1,b.go("weco.home")},function(b){a.errorMessage=b.message,a.isLoading=!1})}function e(){c.signup(a.credentials).then(function(){a.isLoading=!1,b.go("weco.home")},function(b){a.errorMessage=b.message,a.isLoading=!1})}a.credentials={},a.user=c.me,a.isLoading=!1,a.errorMessage="",a.isLoginForm=function(){return"auth.login"==b.current.name},a.submit=function(){a.isLoading=!0,a.isLoginForm()?d():e()}}]);var app=angular.module("wecoApp");app.controller("branchController",["$scope","$state","$timeout","Branch","Modal",function(a,b,c,d,e){a.branchid=b.params.branchid,a.isControlSelected=function(a){return b.current.name.indexOf(a)>-1},a.branch={},d.get(b.params.branchid).then(function(b){c(function(){a.branch=b})},function(a){404==a.status&&b.go("weco.notfound")}),a.openProfilePictureModal=function(){e.open("/app/components/modals/upload/upload-image.modal.view.html",{route:"branch/"+a.branchid+"/",type:"picture"}).then(function(a){a&&b.go(b.current,{},{reload:!0})},function(){console.log("error")})},a.openCoverPictureModal=function(){e.open("/app/components/modals/upload/upload-image.modal.view.html",{route:"branch/"+a.branchid+"/",type:"cover"}).then(function(a){a&&b.go(b.current,{},{reload:!0})},function(){console.log("error")})}}]);var app=angular.module("wecoApp");app.controller("nucleusModeratorsController",["$scope","$state","$timeout","User",function(a,b,c,d){a.mods=[],a.getMod=function(b,e){d.get(b).then(function(b){c(function(){a.mods[e]=b})},function(){console.error("Unable to get mod!")})};for(var e=0;e<a.branch.mods.length;e++)a.getMod(a.branch.mods[e],e)}]);var app=angular.module("wecoApp");app.controller("nucleusController",["$scope","$state","$timeout","Branch",function(a,b,c,d){a.tabItems=["about","settings","moderators"],a.tabStates=['weco.branch.nucleus.about({ "branchid": "'+a.branchid+'"})','weco.branch.nucleus.settings({ "branchid": "'+a.branchid+'"})','weco.branch.nucleus.moderators({ "branchid": "'+a.branchid+'"})']}]);var app=angular.module("wecoApp");app.controller("nucleusSettingsController",["$scope","$state","$timeout","Modal",function(a,b,c,d){function e(a){d.open("/app/components/modals/branch/nucleus/settings/settings.modal.view.html",a).then(function(a){a&&b.go(b.current,{},{reload:!0})},function(){console.error("Error updating branch settings")})}a.openVisibleNameModal=function(){e({title:"Visible Name",inputs:[{placeholder:"Visible name",type:"text",fieldname:"name"}]})}}]);var app=angular.module("wecoApp");app.controller("subbranchesController",["$scope","$state","$timeout","Branch",function(a,b,c,d){function e(b,c){var f=b.shift();f&&d.getPictureUrl(a.branches[c].id,"picture").then(function(d){d&&d.data&&d.data.data&&(a.branches[c].profileUrl=d.data.data),e(b,c+1)},function(){e(b,c+1)})}a.tabItems=["all time","this year","this month","this week","today","this hour"],a.tabStates=['weco.branch.subbranches({ "branchid": "'+a.branchid+'", "filter": "alltime" })','weco.branch.subbranches({ "branchid": "'+a.branchid+'", "filter": "year" })','weco.branch.subbranches({ "branchid": "'+a.branchid+'", "filter": "month" })','weco.branch.subbranches({ "branchid": "'+a.branchid+'", "filter": "week" })','weco.branch.subbranches({ "branchid": "'+a.branchid+'", "filter": "today" })','weco.branch.subbranches({ "branchid": "'+a.branchid+'", "filter": "hour" })'],a.branches=[],d.getSubbranches(a.branchid).then(function(b){c(function(){a.branches=b,e(a.branches.slice(),0)})},function(){console.error("Unable to get branches!")})}]);var app=angular.module("wecoApp");app.controller("profileController",["$scope","$timeout","$state","User","Modal",function(a,b,c,d,e){a.user={},a.isLoading=!0,d.get(c.params.username).then(function(c){b(function(){a.user=c,a.isLoading=!1})},function(b){404==b.status&&c.go("weco.notfound"),a.isLoading=!1}),a.tabItems=["about","timeline"],a.tabStates=["weco.profile.about","weco.profile.timeline"],a.$watch(function(){return d.me().username},function(b){b==c.params.username&&-1==a.tabItems.indexOf("settings")&&-1==a.tabStates.indexOf("weco.profile.settings")&&(a.tabItems.push("settings"),a.tabStates.push("weco.profile.settings"))}),a.openProfilePictureModal=function(){e.open("/app/components/modals/upload/upload-image.modal.view.html",{route:"user/me/",type:"picture"}).then(function(a){a&&c.go(c.current,{},{reload:!0})},function(){console.log("error")})},a.openCoverPictureModal=function(){e.open("/app/components/modals/upload/upload-image.modal.view.html",{route:"user/me/",type:"cover"}).then(function(a){a&&c.go(c.current,{},{reload:!0})},function(){console.log("error")})},a.isMyProfile=function(){return d.me().username==c.params.username}}]);var app=angular.module("wecoApp");app.controller("profileSettingsController",["$scope","$state","Modal",function(a,b,c){function d(a){c.open("/app/components/modals/profile/settings/settings.modal.view.html",a).then(function(a){a&&b.go(b.current,{},{reload:!0})},function(){console.error("Error updating profile settings")})}a.openNameModal=function(){d({title:"Name",inputs:[{placeholder:"First name",type:"text",fieldname:"firstname"},{placeholder:"Last name",type:"text",fieldname:"lastname"}]})},a.openEmailModal=function(){d({title:"Email",inputs:[{placeholder:"Email",type:"email",fieldname:"email"}]})},a.openDOBModal=function(){d({title:"Date of Birth",inputs:[{placeholder:"Date of Birth",type:"date",fieldname:"dob"}]})}}]);